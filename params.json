{"name":"Jelly Truck","tagline":"A Pusher clone in node","body":"jelly-truck\r\n===========\r\n\r\nJelly Truck is a [Pusher](http://pusher.com) clone written in node using coffeescript. It is in **very early stages of development**, so it is not usable in a production environment.\r\n\r\nHow do I even?\r\n--------------\r\n\r\nClone the repository:\r\n\r\n    git clone git@github.com:ianmurrays/jelly-truck.git\r\n\r\nInstall all dependencies\r\n\r\n    npm install\r\n\r\nRun the server\r\n\r\n    ./bin/jelly-truck -a app_id -k app_key -s s0m3secre7\r\n\r\nWhat is working?\r\n----------------\r\n\r\nPractically all the basic functionality is there, except for most REST API methods (like listing channels and stuff like that). Presence and Private channels are supported. The last Pusher JS client that's supported is version 1.9, since they introduced [sockjs](https://github.com/sockjs/sockjs-node) (which is not supported by jelly-truck just yet).\r\n\r\nAs it is, jelly-truck isn't really scalable since it stores everything in memory. Redis as a decoupled database is planned for future releases.\r\n\r\nYou can always check out the project's [milestones](https://github.com/ianmurrays/jelly-truck/issues/milestones) to see what's planned and what's already done.\r\n\r\nHow can I help?\r\n---------------\r\n\r\nCheck out the [issues](https://github.com/ianmurrays/jelly-truck/issues). If you want to contribute, please:\r\n\r\n  1. Fork the repository\r\n  2. Checkout the `development` branch\r\n  3. Create a feature branch off `development`\r\n  4. Do some ninja programming\r\n  5. Create a pull request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}